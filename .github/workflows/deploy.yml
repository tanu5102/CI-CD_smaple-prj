name: 🚀 Deploy My Awesome Website

# When should this run?
on:
  push:
    branches: [ main ]  # Run when code is pushed to main branch
  pull_request:
    branches: [ main ]  # Run when someone creates a pull request

# Add permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# What should happen?
jobs:
  test:
    name: ✅ Test Website
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Get our code
    - name: 📥 Get the code
      uses: actions/checkout@v4
      
    # Step 2: Setup Node.js (needed for npm commands)
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    # Step 3: Install dependencies (if any)
    - name: 📦 Install dependencies
      run: npm install
      
    # Step 4: Run tests
    - name: 🧪 Run tests
      run: npm test
      
    # Step 5: Build the website
    - name: 🔨 Build website
      run: npm run build

  deploy:
    name: 🌐 Deploy to GitHub Pages
    needs: test  # Only run if tests pass!
    runs-on: ubuntu-latest
    
    # Only deploy when pushing to main branch (not on pull requests)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Set up GitHub Pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    # Step 1: Get our code
    - name: 📥 Get the code
      uses: actions/checkout@v4
      
    # Step 2: Setup Node.js and build
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 📦 Install dependencies
      run: npm install
      
    - name: 🔨 Build website
      run: npm run build
      
    # Step 3: Setup Pages
    - name: 📄 Setup Pages
      uses: actions/configure-pages@v4
      
    # Step 4: Upload artifact
    - name: 📤 Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './dist'  # Change this to your build output directory
        
    # Step 5: Deploy to GitHub Pages
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Optional: Send a success message
  notify:
    name: 📢 Notify Success
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: 🎉 Success message
      run: |
        echo "🎉 Website deployed successfully!"
        echo "✅ Tests passed"
        echo "🚀 Deployment completed"
        echo "🌐 Your website should be live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
